name: Build site and deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - fork_merge
  push:
    branches: 
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  jsons:
    name: Check modified jsons
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: check_files
        run: |
          jsons=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep json$ | xargs)
          if [[ "${jsons[*]}" = *[![:space:]]* ]]; then 
            echo ${jsons}
            echo "{run_validation}={true}" >> $GITHUB_ENV
          else
            echo "No jsons commited/changed"
            echo "{run_validation}={false}" >> $GITHUB_ENV
          fi
          
      - name: Setup R
        if: env.run_validation == 'true'
        uses: r-lib/actions/setup-r@v2
        
      - name: Install R-packages
        if: env.run_validation == 'true'
        run: install.packages(c("here", "jsonvalidate"), Ncpus = 2)
        shell: Rscript {0}
      
      - name: Validate jsons
        if: env.run_validation == 'true'
        run: Rscript scripts/validate_jsons.R
          
          
  build:
    name: Build and publish to Netlify
    runs-on: macOS-latest
    needs: [jsons]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Hugo version
        id: hugo_vr
        run: |
          ver=$(cat .Rprofile | grep hugo.version | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g)
          echo $ver
          echo "hugovr=$ver" >> $GITHUB_ENV

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.hugovr }}
          extended: true
      
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        
      - name: Install R-packages
        run: |
          install.packages(c(
            "here", "jsonlite",
            "dplyr", "tidyr"),
            Ncpus = 2)
        shell: Rscript {0}

      - name: Populate untranslated pages
        run: Rscript scripts/missing_translations.R
        
      - name: Site data - Get directory data
        uses: actions/checkout@v3
        with:
          repository: rladies/directory
          ssh-key: ${{ secrets.DIRECTORY_DEPLOY_SECRET}}
          path: dir
          
      - name: Site data - Meetup
        uses: actions/checkout@v3
        with:
          repository: rladies/meetup_archive
          ssh-key: ${{ secrets.MEETUP_ARCHIVE_KEY}}
          path: mtp

      - name: Site data - Get blogs list
        uses: actions/checkout@v3
        with:
          repository: rladies/awesome-rladies-blogs
          ssh-key: ${{ secrets.RLADIES_BLOGS_KEY}}
          path: rblogs
          
      - name: Site data - clean cloned repos
        run: |
          mv rblogs/blogs data/rblogs
          mv dir/data/json data/directory
          mv dir/data/img/* assets/directory
          mv mtp/data/* data/meetup/
          rm -rf dir rblogs mtp
          
      - name: Site data - merge chapter and meetup
        run: Rscript --verbose scripts/get_chapters.R

      - name: Build
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            hugo --enableGitInfo --minify \
              -b https://${{github.event.number}}--rladies-dev.netlify.app/
          elif [[ ${{ github.event_name }} != 'pull_request' && ${{ github.ref }} == 'refs/heads/main' ]]; then
            hugo --enableGitInfo --minify 
          fi
        
      - name: Install netlify cli
        run: npm install netlify-cli -g

      - name: Deploy Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "Running netlify preview deploy"
            netlify deploy --alias ${{github.event.number}}
          elif [[ ${{ github.event_name }} != 'pull_request' && ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "Running netlify production deploy"
            netlify deploy --prod
          else
            echo "Nothing to send to netlify"
          fi
        shell: sh

