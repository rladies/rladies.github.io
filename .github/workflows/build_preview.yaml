name: "Preview: Build and deploy"

on:
  workflow_dispatch:
    inputs:
      directory:
        description: 'Directory reference'
        required: true
        default: 'main'
      orig_pr:
        description: 'Originating PR'
  pull_request:
    branches:
      - main
      - fork_merge

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build: 
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    name: Build and publish preview through Netlify
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set env parameters
        run: |
          ver=$(cat .Rprofile | grep hugo.version | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g)
          echo "hugovr=$ver" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "directory=${{ github.event.inputs.directory }}" >> $GITHUB_ENV
            echo "netalias=${{ github.event.inputs.directory }}" >> $GITHUB_ENV
          else
            echo "directory=main" >> $GITHUB_ENV
            echo "netalias=${{ github.event.number }}" >> $GITHUB_ENV
          fi
        
      - name: Site data - Clean folders
        run: rm -r data/directory data/rblogs
        
      - name: Site data - DIRECTORY - Get
        uses: actions/checkout@v3
        if: "${{ env.directory == 'main' }}"
        with:
          repository: rladies/directory
          ssh-key: ${{ secrets.DIRECTORY_DEPLOY_SECRET }}
          path: tmpd/dir
          
      - name: Site data  - DIRECTORY - Download artifact
        uses: dawidd6/action-download-artifact@v2
        if:  "${{ env.directory != 'main' }}"
        with:
          name: entries
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed or GitHub token in a job where the permissions `action` scope set to `read`
          github_token: ${{ secrets.GLOBAL_PAT }}
          # Optional, will get head commit SHA
          run_id: ${{ env.directory }}
          # Optional, defaults to current repo
          repo: rladies/directory
          path: entries/
          
      - name: Site data - DIRECTORY - Move
        run: |
          rm -rf data/directory/* assets/directory/*
          if [ "${{ env.directory }}" = "main" ]; then
            cp -r tmpd/dir/data/json data/directory
            cp -r tmpd/dir/data/img/* assets/directory
          else
            mv entries/json data/directory
            if [ -d "entries/img" ]; then
              mv entries/img/* assets/directory
            fi
          fi
          
      - name: Site data - Meetup
        uses: actions/checkout@v3
        with:
          repository: rladies/meetup_archive
          ssh-key: ${{ secrets.MEETUP_ARCHIVE_KEY}}
          path: tmpd/mtp

      - name: Site data - Get blogs list
        uses: actions/checkout@v3
        with:
          repository: rladies/awesome-rladies-blogs
          ssh-key: ${{ secrets.RLADIES_BLOGS_KEY}}
          path: tmpd/rblogs
          
      - name: Site data - clean cloned repos
        run: |
          cp -r tmpd/rblogs/blogs data/rblogs
          cp -r tmpd/mtp/data/* data/meetup/
          rm -rf tmpd

      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.0'
          
      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      
      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      - name: Populate untranslated pages
        run: Rscript scripts/missing_translations.R
        
      - name: Site data - merge chapter and meetup
        run: Rscript --verbose scripts/get_chapters.R

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.hugovr }}
          extended: true
          
      - name: Build
        run: |
            hugo --enableGitInfo --minify \
              -b https://${{ env.netalias }}--rladies-dev.netlify.app/
        
      - name: Install netlify cli
        run: npm install netlify-cli -g

      - name: Deploy Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --alias ${{ env.netalias }}
        shell: sh
        
      - uses: actions/github-script@v6
        name: Notify PR about build
        if: ${{ github.event_name == 'pull_request' && github.event.inputs.orig_pr }}
        env:
          issue: ${{ github.event.inputs.orig_pr || github.event.pull_request.number }}
          repo_name: ${{ github.event.inputs.orig_pr && 'rladies/directory' || (github.repository) }}
        with:
          github-token: ${{ secrets.GLOBAL_PAT }}
          script: |
            const repoParts = process.env.repo_name.split('/');
            const repo = repoParts[repoParts.length - 1];
            await github.rest.issues.createComment({
              issue_number: ${{ env.issue }},
              owner: 'rladies',
              repo: repo,
              body: ':tada: The preview is built! [Check it out](https://${{ env.netalias }}--rladies-dev.netlify.app/directory)'
            })
        
