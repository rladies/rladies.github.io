name: Build site and deploy preview

on:
  workflow_dispatch:
    inputs:
      directory_artifact:
        description: 'Directory artifact'
        required: true
        default: 'main'
  pull_request:
    branches:
      - main
      - fork_merge


jobs:
  jsons:
    name: Check modified jsons
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: check_files
        run: |
          jsons=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep json$ | xargs)
          if [[ "${jsons[*]}" = *[![:space:]]* ]]; then 
            echo ${jsons}
            echo "{run_validation}={true}" >> $GITHUB_ENV
          else
            echo "No jsons commited/changed"
            echo "{run_validation}={false}" >> $GITHUB_ENV
          fi
          
      - name: Setup R
        if: env.run_validation == 'true'
        uses: r-lib/actions/setup-r@v2
        
      - name: Install R-packages
        if: env.run_validation == 'true'
        uses: r-lib/actions/setup-renv@v2    
       
      - name: Validate jsons
        if: env.run_validation == 'true'
        run: Rscript scripts/validate_jsons.R
          
          
  build:
    name: Build and publish preview through Netlify
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Hugo version
        id: hugo_vr
        run: |
          ver=$(cat .Rprofile | grep hugo.version | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g)
          echo $ver
          echo "hugovr=$ver" >> $GITHUB_ENV

      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
        
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-renv@v2    

      - name: Populate untranslated pages
        run: Rscript scripts/missing_translations.R
        
      - name: Site data - Clean folders
        run: rm -r data/directory data/rblogs
        
      - name: Site data - DIRECTORY - Get
        uses: actions/checkout@v3
        if: ${{ github.event.inputs.directory_artifact }} == 'main'
        with:
          repository: rladies/directory
          ssh-key: ${{ secrets.DIRECTORY_DEPLOY_SECRET}}
          path: tmpd/dir

      - name: Site data  - DIRECTORY - Download artifact
        if: ${{ github.event.inputs.directory_artifact }} != 'main'
        uses: actions/download-artifact@v2
        with:
          name: entries
          path: entries/
          run_id: ${{ github.event.inputs.directory_artifact }}
          token: ${{ secrets.DIRECTORY_DEPLOY_SECRET }}
        
      - name: Site data - DIRECTORY - Move
        run: |
          rm -rf data/directory/* assets/directory/*
          if [ "${{ github.event.inputs.directory_artifact }}" = "true" ]; then
            mv entries/json data/directory
            mv entries/img/* assets/directory
          else
            cp -r tmpd/dir/data/json data/directory
            cp -r tmpd/dir/data/img/* assets/directory
          fi
          
      - name: Site data - Meetup
        uses: actions/checkout@v3
        with:
          repository: rladies/meetup_archive
          ssh-key: ${{ secrets.MEETUP_ARCHIVE_KEY}}
          path: tmpd/mtp

      - name: Site data - Get blogs list
        uses: actions/checkout@v3
        with:
          repository: rladies/awesome-rladies-blogs
          ssh-key: ${{ secrets.RLADIES_BLOGS_KEY}}
          path: tmpd/rblogs
          
      - name: Site data - clean cloned repos
        run: |
          cp -r tmpd/rblogs/blogs data/rblogs
          cp -r tmpd/mtp/data/* data/meetup/
          rm -rf tmpd
          
      - name: Site data - merge chapter and meetup
        run: Rscript --verbose scripts/get_chapters.R

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.hugovr }}
          extended: true
          
      - name: Build
        run: |
            hugo --enableGitInfo --minify \
              -b https://${{github.event.number}}--rladies-dev.netlify.app/
        
      - name: Install netlify cli
        run: npm install netlify-cli -g

      - name: Deploy Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --alias ${{github.event.number}}
        shell: sh

