name: Build site and deploy production

on:
  workflow_dispatch:
  push:
    branches: 
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  jsons:
    name: Check modified jsons
    runs-on: macOS-latest
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get changed files
        id: check_files
        run: |
          jsons=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep json$ | xargs)
          if [[ "${jsons[*]}" = *[![:space:]]* ]]; then 
            echo ${jsons}
            echo "{run_validation}={true}" >> $GITHUB_ENV
          else
            echo "No jsons commited/changed"
            echo "{run_validation}={false}" >> $GITHUB_ENV
          fi
      
      - name: Setup R
        if: env.run_validation == 'true'
        uses: r-lib/actions/setup-r@v2
        
      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      
      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
        
      - name: Install R-packages
        if: env.run_validation == 'true'
        run: install.packages(c("here", "jsonvalidate"), Ncpus = 2)
        shell: Rscript {0}
      
      - name: Validate jsons
        if: env.run_validation == 'true'
        run: Rscript scripts/validate_jsons.R
          
          
  build:
    name: Build and publish production
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Hugo version
        id: hugo_vr
        run: |
          ver=$(cat .Rprofile | grep hugo.version | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g)
          pubdir=$(cat config/_default/config.toml | grep publishDir | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g )
          echo "hugovr=$ver" >> $GITHUB_ENV
          echo "hugobd=$pubdir" >> $GITHUB_ENV
          
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-renv@v2   

      - name: Populate untranslated pages
        run: Rscript scripts/missing_translations.R
        
      - name: Site data - Get directory data
        uses: actions/checkout@v3
        with:
          repository: rladies/directory
          ssh-key: ${{ secrets.DIRECTORY_DEPLOY_SECRET}}
          path: tmpd/dir
          
      - name: Site data - Meetup
        uses: actions/checkout@v3
        with:
          repository: rladies/meetup_archive
          ssh-key: ${{ secrets.MEETUP_ARCHIVE_KEY}}
          path: tmpd/mtp

      - name: Site data - Get blogs list
        uses: actions/checkout@v3
        with:
          repository: rladies/awesome-rladies-blogs
          ssh-key: ${{ secrets.RLADIES_BLOGS_KEY}}
          path: tmpd/rblogs
          
      - name: Site data - clean cloned repos
        run: |
          rm -r data/directory data/rblogs
          mv tmpd/rblogs/blogs data/rblogs
          mv tmpd/dir/data/json data/directory
          cp -r tmpd/dir/data/img/* assets/directory
          cp -r tmpd/mtp/data/* data/meetup/
          rm -rf tmpd
          
      - name: Site data - merge chapter and meetup
        run: Rscript --verbose scripts/get_chapters.R
        
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.hugovr }}
          extended: true

      - name: Build
        run:  hugo --enableGitInfo --minify 
        
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: ${{ env.hugobd }} # The folder the action should deploy.

